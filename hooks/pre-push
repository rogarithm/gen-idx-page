#!/usr/bin/env ruby

require_relative './lib/branch_name_checker'

now_branch_nm = `git rev-parse --abbrev-ref HEAD`
branch_nm_report = BranchNameChecker.new.check(now_branch_nm)

puts 'checking checkstyle...'
checkstyle_result = `./gradlew checkstyleMain checkstyleTest 2>/dev/null`
is_checkstyle_failed = checkstyle_result.split("\n")
  .select {|l|
    l.match(/^> Task :checkstyleMain FAILED.*|^> Task :checkstyleTest FAILED.*/)
  } != []

puts 'checking editorconfig...'
editorconfig_result = `./gradlew editorconfigCheck 2>/dev/null`
is_editorconfig_failed = editorconfig_result.split("\n")
  .select {|l|
    l.match(/^> Task :editorconfigCheck FAILED.*/)
  } != []

puts 'run test...'
test_result = `./gradlew test 2>/dev/null`
is_test_failed = test_result.scan('FAILED') != []

if branch_nm_report.status == 'FAIL'
  puts branch_nm_report.msgs.join("\n")
else
  puts 'branch naming convention ok'
end

if is_checkstyle_failed
  puts 'failed to format code as configured in checkstyle!'
  puts 'run ./gradlew check for detail'
else
  puts 'checkstyle ok'
end
if is_editorconfig_failed
  puts 'trying to recover editorconfig failure...'
  puts 'commit before push'
  `./gradlew editorConfigFormat`
else
  puts 'editorconfig ok'
end
if is_test_failed
  puts 'test failed!'
else
  puts 'test ok'
end

if branch_nm_report.status == 'FAIL' or
  is_checkstyle_failed or
  is_editorconfig_failed or
  is_test_failed
  exit 1
end
